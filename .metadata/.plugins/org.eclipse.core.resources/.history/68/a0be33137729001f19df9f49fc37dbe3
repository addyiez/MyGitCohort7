package com.accenture.lkm.ui;

import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.Scanner;

import org.springframework.context.ApplicationContext;
import org.springframework.context.support.ClassPathXmlApplicationContext;

import com.accenture.lkm.business.bean.EmployeeBean;
import com.accenture.lkm.service.EmployeeService;

@SuppressWarnings("resource")
public class UITester {

	public static void main(String[] args) {
        EmployeeService employeeService = null;
        try {
            ApplicationContext applicationContext = new ClassPathXmlApplicationContext("com/accenture/lkm/resources/cst-main-config.xml");
            employeeService = (EmployeeService) applicationContext.getBean("employeeServiceImpl");

            // Execute the new functionalities
            deleteEmployeeByName(employeeService);
            updateEmployeeSalaryByRole(employeeService);
            getEmployeeDetailsWithin(employeeService);

        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }

	public static void deleteEmployeeByName(EmployeeService serviceImpl) {
	    try {
	        Scanner scanner = new Scanner(System.in);
	        System.out.print("Enter the name of the employee to delete: ");
	        String name = scanner.nextLine().trim(); // Read the name of the employee from user input

	        Integer deleteCount = serviceImpl.deleteEmployeeByName(name);
	        if (deleteCount > 0) {
	            System.out.println("Employee(s) with name '" + name + "' deleted successfully.");
	        } else {
	            System.out.println("No employee found with the name '" + name + "'.");
	        }
	    } catch (Exception e) {
	        System.out.println(e.getMessage());
	    }
	}

    public static void updateEmployeeSalaryByRole(EmployeeService serviceImpl) {
        try {
            String role = "Manager"; // Specify the role for which salary needs to be updated
            Double newSalary = 5000.0; // Specify the new salary
            Integer updateCount = serviceImpl.updateEmployeeSalaryWithRole(role, newSalary);
            if (updateCount > 0) {
                System.out.println("Salary updated successfully for employees with role '" + role + "'.");
            } else {
                System.out.println("No employees found with the role '" + role + "'.");
            }
		
		}catch(Exception e){
			System.out.println(e.getMessage());
		}
	}
    public static void getEmployeeDetailsWithin(EmployeeService serviceImpl) {
        try {
        	// Logic to specify the start date
        	Calendar startCalendar = Calendar.getInstance();
        	startCalendar.set(2024, Calendar.JUNE, 1); // Specify year, month (0-based, so June is 5), and day of month
        	Date startDate = startCalendar.getTime();
        	            
        	// Logic to specify the end date
        	Calendar endCalendar = Calendar.getInstance();
        	endCalendar.set(2024, Calendar.JUNE, 30); // Specify year, month (0-based, so June is 5), and day of month
        	Date endDate = endCalendar.getTime();
            
            List<EmployeeBean> employeeList = serviceImpl.getEmployeeDetailsWithin(startDate, endDate);
            if (employeeList != null && !employeeList.isEmpty()) {
                System.out.println("Employees within the specified date range:");
                for (EmployeeBean employee : employeeList) {
                    System.out.println("Employee ID: " + employee.getId());
                    System.out.println("Name: " + employee.getName());
                    System.out.println("Role: " + employee.getRole());
                    System.out.println("Salary: " + employee.getSalary());
                    System.out.println("---------------------------");
                }
            } else {
                System.out.println("No employees found within the specified date range.");
            }
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }

	public static void addEmployee(EmployeeService serviceImpl) {

		EmployeeBean bean = new EmployeeBean();
		bean.setInsertTime(new Date());
		bean.setName("New Employee");
		bean.setRole("Sr.Analyst");
		bean.setSalary(10.0);
		try {

			int id = serviceImpl.addEmployee(bean);
			System.out.println("Employee Registered Successfully: " + id);
	
		} catch (Exception e) {
			System.out.println(e.getMessage());
		}

	}

	public static void getEmployeeDetails(EmployeeService serviceImpl) {

		try {

			EmployeeBean employeeBean = serviceImpl.getEmployeeDetails(1003);

			if (employeeBean == null) 
			{
				System.out.println("Invalid Employee Id");
			} 
			else 
			{
				System.out.println("Employee Details");
				System.out.println("================");
				System.out.println("Name: " + employeeBean.getName());
				System.out.println("Salary: " + employeeBean.getSalary());
				System.out.println("Role: " + employeeBean.getRole());
			}
			
			
		} catch (Exception e) {
			// TODO Auto-generated catch block
			System.out.println(e.getMessage());
		}

	}
	
	public static void updateEmployeeDetails(EmployeeService serviceImpl) {

		try {
			

			EmployeeBean foundEmployeeBean = serviceImpl.getEmployeeDetails(1003);

			if (foundEmployeeBean == null) 
			{
				System.out.println("Invalid Employee Id");
			} 
			else 
			{
				foundEmployeeBean.setSalary(1235.4);
				EmployeeBean updatedBean=serviceImpl.updateEmployeeDetails(foundEmployeeBean);
				System.out.println("Updated Employee Details");
				System.out.println("========================");
				System.out.println("Name: " + updatedBean.getName());
				System.out.println("Salary: " + updatedBean.getSalary());
				System.out.println("Role: " + updatedBean.getRole());
			}
			
			
		} catch (Exception e) {
			// TODO Auto-generated catch block
			System.out.println(e.getMessage());
		}

	}
	
	
	public static void deleteEmployee(EmployeeService employeeService) {

		try {

			EmployeeBean employeeBean = employeeService.deleteEmployeeDetails(1003);

			if (employeeBean == null) 
			{
				System.out.println("Invalid Employee Id");
			} 
			else 
			{	
				System.out.println("Employee Deleted successfully with employeeId: "+employeeBean.getId());
			}
			
			
		} catch (Exception e) {
			// TODO Auto-generated catch block
			System.out.println(e.getMessage());
		}
	}

	
}